name: deploy

on:
  workflow_dispatch:
  
jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan_cache.json
          key: terraform-lock-${{ steps.extract_branch.outputs.branch }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        id: init
        run: |
             cat main.tf 
             terraform init
  apply:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ github.event.workflow_run.head_branch }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Plan
        id: plan
        run: |
          terraform init
          terraform plan -no-color -out plan_cache.json 
      - name: Terraform apply
        run: terraform apply -input=false -no-color -auto-approve plan_cache.json
      - name: Kubeconf artefact
        uses: actions/upload-artifact@v2
        with:
          name: kubeconf
          path: |
            kube/*
          retention-days: 1
  rds_catalogo:
    runs-on: ubuntu-latest
    needs: apply
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region:  ${{ secrets.AWS_REGION }}
      - name: GET Endpoint RDS
        run: |
          ENDPOINT=`aws rds describe-db-instances --db-instance-identifier teste --query 'DBInstances[0].Endpoint.Address'`
          echo $ENDPOINT
          echo "endpoint=$ENDPOINT" >> $GITHUB_ENV
      - name: Write Catalogo Info RDS
        run: |   
          yq e ' .metadata.endpoint =  ${{ env.endpoint }}' -i catalog-info.yaml
          cat ./catalog-info.yaml
      - name: Set up Git
        run: |
          git config --global user.email " ${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_NAME }}"
          git remote rm origin
          git remote add origin "https://github.com/${{ github.repository }}.git"

      - name: Commit and Push Changes
        run: |
          echo "Automated commit" >> changes.txt
          git add .
          git commit -m "Automated commit - ${{ github.sha }}"
          git push --set-upstream origin ${{ github.head_ref }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
